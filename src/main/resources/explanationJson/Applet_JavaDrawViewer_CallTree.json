{
  "nodeType": "tree",
  "leaf": false,
  "className": "",
  "methodName": "",
  "methodSignature": "",
  "time": 0,
  "count": 0,
  "selfTime": 0,
  "lineNumber": -1,
  "percent": 0.0,
  "explanation": "Initializes a drawing app with undo manager and sets up UI components for efficient rendering.",
  "sourceCode": "",
  "children": [
    {
      "nodeType": "node",
      "leaf": false,
      "className": "sun.applet.AppletPanel",
      "methodName": "run",
      "methodSignature": "()V",
      "time": 32209509,
      "count": 1,
      "selfTime": 32185471,
      "lineNumber": -1,
      "percent": 50.0,
      "explanation": "Initializes drawing app with undo manager and sets up UI components.",
      "sourceCode": "",
      "children": [
        {
          "nodeType": "node",
          "leaf": false,
          "className": "CH.ifa.draw.samples.javadraw.JavaDrawViewer",
          "methodName": "init",
          "methodSignature": "()V",
          "time": 24038,
          "count": 1,
          "selfTime": 12521,
          "lineNumber": -1,
          "percent": 0.0,
          "explanation": "Initializes a drawing application with an undo manager and sets up the UI components.",
          "sourceCode": "public void init() {\r\n    setUndoManager(new UndoManager());\r\n    getContentPane().setLayout(new BorderLayout());\r\n    fView \u003d new StandardDrawingView(this, 400, 370);\r\n    getContentPane().add(\"Center\", fView);\r\n    fTool \u003d new FollowURLTool(this, this);\r\n    fIconkit \u003d new Iconkit(this);\r\n    String filename \u003d getParameter(\"Drawing\");\r\n    if (filename !\u003d null) {\r\n        loadDrawing(filename);\r\n        fView.setDrawing(fDrawing);\r\n    } else {\r\n        showStatus(\"Unable to load drawing\");\r\n    }\r\n}",
          "children": [
            {
              "nodeType": "node",
              "leaf": false,
              "className": "CH.ifa.draw.standard.StandardDrawingView",
              "methodName": "\u003cinit\u003e",
              "methodSignature": "(LCH/ifa/draw/framework/DrawingEditor;II)V",
              "time": 11188,
              "count": 1,
              "selfTime": 1142,
              "lineNumber": -1,
              "percent": 0.0,
              "explanation": "Sets painter as display update strategy for rendering graphics.",
              "sourceCode": "",
              "children": [
                {
                  "nodeType": "node",
                  "leaf": true,
                  "className": "java.awt.Panel",
                  "methodName": "\u003cinit\u003e",
                  "methodSignature": "()V",
                  "time": 9233,
                  "count": 1,
                  "selfTime": 9233,
                  "lineNumber": -1,
                  "percent": 0.0,
                  "explanation": "",
                  "sourceCode": "",
                  "children": [],
                  "id": 4
                },
                {
                  "nodeType": "node",
                  "leaf": true,
                  "className": "CH.ifa.draw.standard.BufferedUpdateStrategy",
                  "methodName": "\u003cinit\u003e",
                  "methodSignature": "()V",
                  "time": 802,
                  "count": 1,
                  "selfTime": 802,
                  "lineNumber": -1,
                  "percent": 0.0,
                  "explanation": "",
                  "sourceCode": "",
                  "children": [],
                  "id": 5
                },
                {
                  "nodeType": "node",
                  "leaf": true,
                  "className": "java.util.Vector",
                  "methodName": "\u003cinit\u003e",
                  "methodSignature": "()V",
                  "time": 4,
                  "count": 1,
                  "selfTime": 4,
                  "lineNumber": -1,
                  "percent": 0.0,
                  "explanation": "",
                  "sourceCode": "",
                  "children": [],
                  "id": 6
                },
                {
                  "nodeType": "node",
                  "leaf": true,
                  "className": "java.awt.Dimension",
                  "methodName": "\u003cinit\u003e",
                  "methodSignature": "(II)V",
                  "time": 3,
                  "count": 1,
                  "selfTime": 3,
                  "lineNumber": -1,
                  "percent": 0.0,
                  "explanation": "",
                  "sourceCode": "",
                  "children": [],
                  "id": 7
                },
                {
                  "nodeType": "node",
                  "leaf": true,
                  "className": "java.awt.Point",
                  "methodName": "\u003cinit\u003e",
                  "methodSignature": "(II)V",
                  "time": 3,
                  "count": 1,
                  "selfTime": 3,
                  "lineNumber": -1,
                  "percent": 0.0,
                  "explanation": "",
                  "sourceCode": "",
                  "children": [],
                  "id": 8
                },
                {
                  "nodeType": "node",
                  "leaf": true,
                  "className": "CH.ifa.draw.standard.StandardDrawingView",
                  "methodName": "setDisplayUpdate",
                  "methodSignature": "(LCH/ifa/draw/framework/Painter;)V",
                  "time": 1,
                  "count": 1,
                  "selfTime": 1,
                  "lineNumber": -1,
                  "percent": 0.0,
                  "explanation": "Sets a painter as the display update strategy.",
                  "sourceCode": "/**\r\n * Sets the current display update strategy.\r\n * @see Painter\r\n */\r\npublic void setDisplayUpdate(Painter updateStrategy) {\r\n    fUpdateStrategy \u003d updateStrategy;\r\n}",
                  "children": [],
                  "id": 9
                }
              ],
              "id": 3
            },
            {
              "nodeType": "node",
              "leaf": false,
              "className": "CH.ifa.draw.util.Iconkit",
              "methodName": "\u003cinit\u003e",
              "methodSignature": "(Ljava/awt/Component;)V",
              "time": 304,
              "count": 1,
              "selfTime": 288,
              "lineNumber": -1,
              "percent": 0.0,
              "explanation": "",
              "sourceCode": "",
              "children": [
                {
                  "nodeType": "node",
                  "leaf": true,
                  "className": "java.util.Hashtable",
                  "methodName": "\u003cinit\u003e",
                  "methodSignature": "(I)V",
                  "time": 11,
                  "count": 1,
                  "selfTime": 11,
                  "lineNumber": -1,
                  "percent": 0.0,
                  "explanation": "",
                  "sourceCode": "",
                  "children": [],
                  "id": 11
                },
                {
                  "nodeType": "node",
                  "leaf": true,
                  "className": "java.util.Vector",
                  "methodName": "\u003cinit\u003e",
                  "methodSignature": "(I)V",
                  "time": 5,
                  "count": 1,
                  "selfTime": 5,
                  "lineNumber": -1,
                  "percent": 0.0,
                  "explanation": "",
                  "sourceCode": "",
                  "children": [],
                  "id": 12
                }
              ],
              "id": 10
            },
            {
              "nodeType": "node",
              "leaf": false,
              "className": "CH.ifa.draw.samples.javadraw.FollowURLTool",
              "methodName": "\u003cinit\u003e",
              "methodSignature": "(LCH/ifa/draw/framework/DrawingView;Ljava/applet/Applet;)V",
              "time": 12,
              "count": 1,
              "selfTime": 6,
              "lineNumber": -1,
              "percent": 0.0,
              "explanation": "",
              "sourceCode": "",
              "children": [
                {
                  "nodeType": "node",
                  "leaf": true,
                  "className": "CH.ifa.draw.standard.AbstractTool",
                  "methodName": "\u003cinit\u003e",
                  "methodSignature": "(LCH/ifa/draw/framework/DrawingView;)V",
                  "time": 6,
                  "count": 1,
                  "selfTime": 6,
                  "lineNumber": -1,
                  "percent": 0.0,
                  "explanation": "",
                  "sourceCode": "",
                  "children": [],
                  "id": 14
                }
              ],
              "id": 13
            },
            {
              "nodeType": "node",
              "leaf": true,
              "className": "java.awt.BorderLayout",
              "methodName": "\u003cinit\u003e",
              "methodSignature": "()V",
              "time": 8,
              "count": 1,
              "selfTime": 8,
              "lineNumber": -1,
              "percent": 0.0,
              "explanation": "",
              "sourceCode": "",
              "children": [],
              "id": 15
            },
            {
              "nodeType": "node",
              "leaf": true,
              "className": "CH.ifa.draw.util.Iconkit",
              "methodName": "\u003cclinit\u003e",
              "methodSignature": "()V",
              "time": 4,
              "count": 1,
              "selfTime": 4,
              "lineNumber": -1,
              "percent": 0.0,
              "explanation": "",
              "sourceCode": "",
              "children": [],
              "id": 16
            },
            {
              "nodeType": "node",
              "leaf": true,
              "className": "CH.ifa.draw.samples.javadraw.JavaDrawViewer",
              "methodName": "view",
              "methodSignature": "()LCH/ifa/draw/framework/DrawingView;",
              "time": 1,
              "count": 1,
              "selfTime": 1,
              "lineNumber": -1,
              "percent": 0.0,
              "explanation": "Returns the editor\u0027s drawing view.",
              "sourceCode": "/**\r\n * Gets the editor\u0027s drawing view.\r\n */\r\npublic DrawingView view() {\r\n    return fView;\r\n}",
              "children": [],
              "id": 17
            }
          ],
          "id": 2
        }
      ],
      "id": 1
    },
    {
      "nodeType": "node",
      "leaf": false,
      "className": "java.awt.EventDispatchThread",
      "methodName": "run",
      "methodSignature": "()V",
      "time": 32176645,
      "count": 1,
      "selfTime": 32166126,
      "lineNumber": -1,
      "percent": 50.0,
      "explanation": "A JavaFX component that efficiently renders its content and handles focus traversal.",
      "sourceCode": "",
      "children": [
        {
          "nodeType": "node",
          "leaf": false,
          "className": "CH.ifa.draw.standard.StandardDrawingView",
          "methodName": "paint",
          "methodSignature": "(Ljava/awt/Graphics;)V",
          "time": 10296,
          "count": 1,
          "selfTime": 9,
          "lineNumber": -1,
          "percent": 0.0,
          "explanation": "Efficiently renders a view\u0027s content on an off-screen buffer for drawing.",
          "sourceCode": "",
          "children": [
            {
              "nodeType": "node",
              "leaf": false,
              "className": "CH.ifa.draw.standard.BufferedUpdateStrategy",
              "methodName": "draw",
              "methodSignature": "(Ljava/awt/Graphics;LCH/ifa/draw/framework/DrawingView;)V",
              "time": 10287,
              "count": 1,
              "selfTime": 9365,
              "lineNumber": -1,
              "percent": 0.0,
              "explanation": "Draws a view\u0027s contents on an off-screen buffer for efficient rendering.",
              "sourceCode": "/**\r\n * Draws the view contents.\r\n */\r\npublic void draw(Graphics g, DrawingView view) {\r\n    // create the buffer if necessary\r\n    Dimension d \u003d view.getSize();\r\n    if ((fOffscreen \u003d\u003d null) || (d.width !\u003d fImagewidth) || (d.height !\u003d fImageheight)) {\r\n        fOffscreen \u003d view.createImage(d.width, d.height);\r\n        fImagewidth \u003d d.width;\r\n        fImageheight \u003d d.height;\r\n    }\r\n    // let the view draw on offscreen buffer\r\n    Graphics g2 \u003d fOffscreen.getGraphics();\r\n    view.drawAll(g2);\r\n    g.drawImage(fOffscreen, 0, 0, view);\r\n}",
              "children": [
                {
                  "nodeType": "node",
                  "leaf": false,
                  "className": "CH.ifa.draw.standard.StandardDrawingView",
                  "methodName": "drawAll",
                  "methodSignature": "(Ljava/awt/Graphics;)V",
                  "time": 604,
                  "count": 1,
                  "selfTime": 231,
                  "lineNumber": -1,
                  "percent": 0.0,
                  "explanation": "Draws view contents, including background, drawing, and handles, in back-to-front order.",
                  "sourceCode": "/**\r\n * Draws the contents of the drawing view.\r\n * The view has three layers: background, drawing, handles.\r\n * The layers are drawn in back to front order.\r\n */\r\npublic void drawAll(Graphics g) {\r\n    boolean isPrinting \u003d g instanceof PrintGraphics;\r\n    drawBackground(g);\r\n    if (fBackgrounds !\u003d null \u0026\u0026 !isPrinting) {\r\n        drawPainters(g, fBackgrounds);\r\n    }\r\n    drawDrawing(g);\r\n    if (fForegrounds !\u003d null \u0026\u0026 !isPrinting) {\r\n        drawPainters(g, fForegrounds);\r\n    }\r\n    if (!isPrinting) {\r\n        drawHandles(g);\r\n    }\r\n}",
                  "children": [
                    {
                      "nodeType": "node",
                      "leaf": false,
                      "className": "CH.ifa.draw.standard.StandardDrawingView",
                      "methodName": "drawBackground",
                      "methodSignature": "(Ljava/awt/Graphics;)V",
                      "time": 254,
                      "count": 1,
                      "selfTime": 229,
                      "lineNumber": -1,
                      "percent": 0.0,
                      "explanation": "Draws a background with optional pattern or solid color using Graphics API.",
                      "sourceCode": "/**\r\n * Draws the background. If a background pattern is set it\r\n * is used to fill the background. Otherwise the background\r\n * is filled in the background color.\r\n */\r\npublic void drawBackground(Graphics g) {\r\n    g.setColor(getBackground());\r\n    g.fillRect(0, 0, getBounds().width, getBounds().height);\r\n}",
                      "children": [
                        {
                          "nodeType": "node",
                          "leaf": true,
                          "className": "java.awt.Graphics",
                          "methodName": "fillRect",
                          "methodSignature": "(IIII)V",
                          "time": 22,
                          "count": 1,
                          "selfTime": 22,
                          "lineNumber": -1,
                          "percent": 0.0,
                          "explanation": "",
                          "sourceCode": "",
                          "children": [],
                          "id": 23
                        },
                        {
                          "nodeType": "node",
                          "leaf": true,
                          "className": "java.awt.Graphics",
                          "methodName": "setColor",
                          "methodSignature": "(Ljava/awt/Color;)V",
                          "time": 3,
                          "count": 1,
                          "selfTime": 3,
                          "lineNumber": -1,
                          "percent": 0.0,
                          "explanation": "",
                          "sourceCode": "",
                          "children": [],
                          "id": 24
                        }
                      ],
                      "id": 22
                    },
                    {
                      "nodeType": "node",
                      "leaf": true,
                      "className": "CH.ifa.draw.standard.StandardDrawingView",
                      "methodName": "drawDrawing",
                      "methodSignature": "(Ljava/awt/Graphics;)V",
                      "time": 119,
                      "count": 1,
                      "selfTime": 119,
                      "lineNumber": -1,
                      "percent": 0.0,
                      "explanation": "Method draws a graphical representation using an external object \"fDrawing\".",
                      "sourceCode": "/**\r\n * Draws the drawing.\r\n */\r\npublic void drawDrawing(Graphics g) {\r\n    fDrawing.draw(g);\r\n}",
                      "children": [],
                      "id": 25
                    }
                  ],
                  "id": 21
                },
                {
                  "nodeType": "node",
                  "leaf": true,
                  "className": "java.awt.Image",
                  "methodName": "getGraphics",
                  "methodSignature": "()Ljava/awt/Graphics;",
                  "time": 318,
                  "count": 1,
                  "selfTime": 318,
                  "lineNumber": -1,
                  "percent": 0.0,
                  "explanation": "",
                  "sourceCode": "",
                  "children": [],
                  "id": 26
                }
              ],
              "id": 20
            }
          ],
          "id": 19
        },
        {
          "nodeType": "node",
          "leaf": true,
          "className": "CH.ifa.draw.standard.StandardDrawingView",
          "methodName": "isFocusTraversable",
          "methodSignature": "()Z",
          "time": 223,
          "count": 6,
          "selfTime": 223,
          "lineNumber": -1,
          "percent": 0.0,
          "explanation": "Method returns true indicating focus traversability.",
          "sourceCode": "public boolean isFocusTraversable() {\r\n    return true;\r\n}",
          "children": [],
          "id": 27
        }
      ],
      "id": 18
    }
  ],
  "id": 0
}